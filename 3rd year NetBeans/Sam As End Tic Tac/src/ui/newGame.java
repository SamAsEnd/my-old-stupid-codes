/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JButton;

/**
 *
 * @author Sam As End
 */
public class newGame extends javax.swing.JFrame {

    /////////////////////////////////////////////////////////////////
    boolean player = true;
    int[] val = new int[10];
    int numberOfMoves = 0;
    boolean attack = false;
    boolean win = false;
    /////////////////////////////////////////////////////////////////

    public newGame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reset = new javax.swing.JButton();
        cancle = new javax.swing.JButton();
        msg = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        x5 = new javax.swing.JButton();
        x7 = new javax.swing.JButton();
        x3 = new javax.swing.JButton();
        x2 = new javax.swing.JButton();
        x6 = new javax.swing.JButton();
        x9 = new javax.swing.JButton();
        x4 = new javax.swing.JButton();
        x8 = new javax.swing.JButton();
        x1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Option = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        newPlayer = new javax.swing.JMenuItem();
        newCom = new javax.swing.JMenuItem();
        exiT = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        abouT = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setResizable(false);

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        cancle.setText("Com");
        cancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleActionPerformed(evt);
            }
        });

        msg.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        msg.setText(" ");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        x5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x5.setText(" ");
        x5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x5ActionPerformed(evt);
            }
        });

        x7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x7.setText(" ");
        x7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x7ActionPerformed(evt);
            }
        });

        x3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x3.setText(" ");
        x3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3ActionPerformed(evt);
            }
        });

        x2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x2.setText(" ");
        x2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2ActionPerformed(evt);
            }
        });

        x6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x6.setText(" ");
        x6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x6ActionPerformed(evt);
            }
        });

        x9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x9.setText(" ");
        x9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x9ActionPerformed(evt);
            }
        });

        x4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x4.setText(" ");
        x4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4ActionPerformed(evt);
            }
        });

        x8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x8.setText(" ");
        x8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x8ActionPerformed(evt);
            }
        });

        x1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x1.setText(" ");
        x1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(x1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(x2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(x3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(x4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(x5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(x6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(x7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(x8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(x9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Option.setText("Option");

        jMenu3.setText("New Game");

        newPlayer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newPlayer.setText("Player Start");
        newPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlayerActionPerformed(evt);
            }
        });
        jMenu3.add(newPlayer);

        newCom.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        newCom.setText("Com Start");
        newCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newComActionPerformed(evt);
            }
        });
        jMenu3.add(newCom);

        Option.add(jMenu3);

        exiT.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exiT.setText("Exit");
        exiT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exiTActionPerformed(evt);
            }
        });
        Option.add(exiT);

        jMenuBar1.add(Option);

        jMenu2.setText("Help");

        abouT.setText("About");
        abouT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abouTActionPerformed(evt);
            }
        });
        jMenu2.add(abouT);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancle, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(msg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset)
                    .addComponent(cancle))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void x1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x1ActionPerformed
        myHanler(x1);
    }//GEN-LAST:event_x1ActionPerformed

    private void x2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x2ActionPerformed
        myHanler(x2);
    }//GEN-LAST:event_x2ActionPerformed

    private void x3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x3ActionPerformed
        myHanler(x3);
    }//GEN-LAST:event_x3ActionPerformed

    private void x4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x4ActionPerformed
        myHanler(x4);
    }//GEN-LAST:event_x4ActionPerformed

    private void x5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x5ActionPerformed
        myHanler(x5);
    }//GEN-LAST:event_x5ActionPerformed

    private void x6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x6ActionPerformed
        myHanler(x6);
    }//GEN-LAST:event_x6ActionPerformed

    private void x7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x7ActionPerformed
        myHanler(x7);
    }//GEN-LAST:event_x7ActionPerformed

    private void x8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x8ActionPerformed
        myHanler(x8);
    }//GEN-LAST:event_x8ActionPerformed

    private void x9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x9ActionPerformed
        myHanler(x9);
    }//GEN-LAST:event_x9ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        JButton[] btn = {null, x1, x2, x3, x4, x5, x6, x7, x8, x9};
        for (int i = 1; i <= 9; i++) {
            btn[i].setText(" ");
            btn[i].setBackground(new java.awt.Color(240, 240, 240));
            btn[i].setEnabled(true);
        }
        player = true;
        attack = false;
        numberOfMoves = 0;
        win = false;
    }//GEN-LAST:event_resetActionPerformed

    private void cancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleActionPerformed
        JButton[] btn = {null, x1, x2, x3, x4, x5, x6, x7, x8, x9};
        for (int i = 1; i <= 9; i++) {
            btn[i].setText(" ");
            btn[i].setBackground(new java.awt.Color(240, 240, 240));
            btn[i].setEnabled(true);
        }
        player = false;
        attack = true;
        numberOfMoves = 0;
        win = false;
        com();
        if (numberOfMoves > 8) {
            msg.setText("Hopeless Game");
            win = true;
        }
    }//GEN-LAST:event_cancleActionPerformed

    private void exiTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exiTActionPerformed
        this.dispose();
    }//GEN-LAST:event_exiTActionPerformed

    private void newPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlayerActionPerformed
        // TODO add your handling code here:
        JButton[] btn = {null, x1, x2, x3, x4, x5, x6, x7, x8, x9};
        for (int i = 1; i <= 9; i++) {
            btn[i].setText(" ");
            btn[i].setBackground(new java.awt.Color(240, 240, 240));
            btn[i].setEnabled(true);
        }
        player = true;
        attack = false;
        numberOfMoves = 0;
        win = false;
    }//GEN-LAST:event_newPlayerActionPerformed

    private void newComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newComActionPerformed
        // TODO add your handling code here:
        JButton[] btn = {null, x1, x2, x3, x4, x5, x6, x7, x8, x9};
        for (int i = 1; i <= 9; i++) {
            btn[i].setText(" ");
            btn[i].setBackground(new java.awt.Color(240, 240, 240));
            btn[i].setEnabled(true);
        }
        player = false;
        attack = true;
        numberOfMoves = 0;
        win = false;
        com();
        if (numberOfMoves > 8) {
            msg.setText("Hopeless Game");
            win = true;
        }
    }//GEN-LAST:event_newComActionPerformed

    private void abouTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abouTActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new about().setVisible(true);
            }
        });
    }//GEN-LAST:event_abouTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new newGame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Option;
    private javax.swing.JMenuItem abouT;
    private javax.swing.JButton cancle;
    private javax.swing.JMenuItem exiT;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel msg;
    private javax.swing.JMenuItem newCom;
    private javax.swing.JMenuItem newPlayer;
    private javax.swing.JButton reset;
    private javax.swing.JButton x1;
    private javax.swing.JButton x2;
    private javax.swing.JButton x3;
    private javax.swing.JButton x4;
    private javax.swing.JButton x5;
    private javax.swing.JButton x6;
    private javax.swing.JButton x7;
    private javax.swing.JButton x8;
    private javax.swing.JButton x9;
    // End of variables declaration//GEN-END:variables

    public void myHanler(JButton btn) {
        if (player && !win) {
            btn.setText("X");
            //btn.setBackground(Color.GREEN);
            btn.setEnabled(Boolean.FALSE);
            player = !player;
            msg.setText("Wait for the computer");
            numberOfMoves++;
            win = checkWin();
            com();
            if (numberOfMoves > 8) {
                msg.setText("Hopeless Game");
                win = true;
            }
        }
    }

    public void comHanler(JButton btn) {
        if (!player) {
            btn.setText("O");
            btn.setEnabled(Boolean.FALSE);
            //btn.setBackground(Color.RED);
            player = !player;
            numberOfMoves++;
            if (numberOfMoves > 8) {
                msg.setText("Hopeless Game");
                win = true;
            }
        }
    }

    public void com() {
        if (!player) {
            val[1] = setVal(x1);
            val[2] = setVal(x2);
            val[3] = setVal(x3);
            val[4] = setVal(x4);
            val[5] = setVal(x5);
            val[6] = setVal(x6);
            val[7] = setVal(x7);
            val[8] = setVal(x8);
            val[9] = setVal(x9);
            if (!checkWin()) {
                int point = aboutToWin();
                if (point != 0) {
                    comHanler(getBtn(point));
                    msg.setText("Wait for you");
                    win = checkWin();
                } else if (numberOfMoves < 7) {
                    int point2;
                    point2 = rand();
                    if (point2 != 0) {
                        comHanler(getBtn(point2));
                        msg.setText("Am still waiting");
                        win = checkWin();
                    } else {
                        msg.setText("Hopeless");
                    }
                }
            }
            win = checkWin();
        }
    }

    public int setVal(JButton btn) {
        if (btn.getText().compareTo("X") == 0) {
            return 1;
        } else if (btn.getText().compareTo("O") == 0) {
            return 0;
        } else {
            return -1;
        }
    }

    public JButton getBtn(int i) {
        switch (i) {
            case 1:
                return x1;
            case 2:
                return x2;
            case 3:
                return x3;
            case 4:
                return x4;
            case 5:
                return x5;
            case 6:
                return x6;
            case 7:
                return x7;
            case 8:
                return x8;
            case 9:
                return x9;
        }
        return null;
    }

    private boolean checkWin() {
        val[1] = setVal(x1);
        val[2] = setVal(x2);
        val[3] = setVal(x3);
        val[4] = setVal(x4);
        val[5] = setVal(x5);
        val[6] = setVal(x6);
        val[7] = setVal(x7);
        val[8] = setVal(x8);
        val[9] = setVal(x9);
        int winner = -2;
        int[] x = {0, 1, 4, 7, 1, 2, 3, 1, 3};
        int[] y = {0, 2, 5, 8, 4, 5, 6, 5, 5};
        int[] z = {0, 3, 6, 9, 7, 8, 9, 9, 7};
        for (int i = 1; i < 9; i++) {
            int a = x[i];
            int b = y[i];
            int c = z[i];
            if (val[a] == val[c] && val[a] == val[b] && val[c] == val[b]) {
                if (val[a] == 1) {
                    winner = 1;
                } else if (val[a] == 0) {
                    winner = 0;
                } else {
                    winner = -1;
                }
            }
        }
        if (winner == 1) {
            msg.setText("YOU WON THE GAME");
            return true;
        } else if (winner == 0) {
            msg.setText("YOU LOSE THE GAME");
            return true;
        }
        return false;
    }

    public int aboutToWin() {
        if (val[5] == -1) {
            return 5;
        }
        int[] x = {0, 1, 4, 7, 1, 2, 3, 1, 3};
        int[] y = {0, 2, 5, 8, 4, 5, 6, 5, 5};
        int[] z = {0, 3, 6, 9, 7, 8, 9, 9, 7};
        for (int i = 1; i < 9; i++) {
            int a = x[i];
            int b = y[i];
            int c = z[i];
            if (val[a] == 0 && val[a] == val[b] && val[c] == -1) {
                return c;
            } else if (val[a] == 0 && val[a] == val[c] && val[b] == -1) {
                return b;
            } else if (val[c] == 0 && val[c] == val[b] && val[a] == -1) {
                return a;
            }
        }
        for (int i = 1; i < 9; i++) {
            int a = x[i];
            int b = y[i];
            int c = z[i];
            if (val[a] != -1 && val[a] == val[b] && val[c] == -1) {
                return c;
            } else if (val[a] != -1 && val[a] == val[c] && val[b] == -1) {
                return b;
            } else if (val[c] != -1 && val[c] == val[b] && val[a] == -1) {
                return a;
            }
        }
        return 0;
    }

    /*
    public int NaboutToWin() {
        if (val[5] == -1) {
            return 5;
        }
        int max;
        max = 0;
        int addess = 0;
        
        
        int[] x = {0, 1, 4, 7, 1, 2, 3, 1, 3};
        int[] y = {0, 2, 5, 8, 4, 5, 6, 5, 5};
        int[] z = {0, 3, 6, 9, 7, 8, 9, 9, 7};
        for (int i = 1; i < 9; i++) {
            int a = x[i];
            int b = y[i];
            int c = z[i];
            int temp = 0;
            if (val[a] != -1 && val[a] == val[b] && val[c] == -1) {
                temp++;
            } else if (val[a] != -1 && val[a] == val[c] && val[b] == -1) {
                temp++;
            } else if (val[c] != -1 && val[c] == val[b] && val[a] == -1) {
                temp++;
            }
        }
        for (int i = 1; i < 9; i++) {
            int a = x[i];
            int b = y[i];
            int c = z[i];
            if (val[a] != -1 && val[a] == val[b] && val[c] == -1) {
                return c;
            } else if (val[a] != -1 && val[a] == val[c] && val[b] == -1) {
                return b;
            } else if (val[c] != -1 && val[c] == val[b] && val[a] == -1) {
                return a;
            }
        }
        return 0;
    }
    * */
    public int rand() {
        if (attack) {
            if (numberOfMoves < 4) {
                int f;
                f = killer();
                if (f != 0) {
                    return f;
                }
            }
        }
        for (int i = 9; i > 0; i--) {
            if (val[i] == -1) {
                val[i] = 0;
                int hint;
                hint = aboutToWin();
                if (hint == 0) {
                    val[i] = -1;
                } else {
                    return i;
                }
            }
        }
        for (int i = 1; i <= 9; i++) {
            if (val[i] == -1) {
                return i;
            }
        }
        return 0;
    }

    private int killer() {
        for (int i = 1; i < 9; i++) {
            if (val[i] == 1) {
                if (i == 2) {
                    return 3;
                }
                if (i == 4) {
                    return 1;
                }
                if (i == 6) {
                    return 9;
                }
                if (i == 8) {
                    return 7;
                }
            }
        }
        return 0;
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sam.converter;

import java.awt.Color;
import java.util.Locale;

/**
 *
 * @author Sam As End
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    /**
     * My function
     */
    private void paintIt() {
        int R = r.getValue();
        int G = g.getValue();
        int B = b.getValue();
        // JOptionPane.showMessageDialog(null, "R "+Integer.toString(R)+ "G "+Integer.toString(G)+ "B "+Integer.toString(B),"ghj", WIDTH);
        try {
            float[] RGBtoHSB = Color.RGBtoHSB(R, G, B, null);
            bg.setBackground(Color.getHSBColor(RGBtoHSB[0], RGBtoHSB[1], RGBtoHSB[2]));
            ppp.setBackground(Color.getHSBColor(RGBtoHSB[0], RGBtoHSB[1], RGBtoHSB[2]));
            String str = "<html><u><center>State</center><u/><hr />";
            str += "Value:&nbsp;&nbsp;&nbsp;<code><i>RGB(" + Integer.toString(R) + "," + Integer.toString(G) + "," + Integer.toString(B) + ")</i><br />";
            str += "</code>Hex:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code><b>#";
            String tmp = Integer.toHexString(R);
            if (tmp.length() == 1) {
                tmp = "0" + tmp;
            }
            tmp = tmp.toUpperCase(Locale.ENGLISH);
            str += tmp;
            tmp = Integer.toHexString(G);
            if (tmp.length() == 1) {
                tmp = "0" + tmp;
            }
            tmp = tmp.toUpperCase(Locale.ENGLISH);
            str += tmp;
            tmp = Integer.toHexString(B);
            if (tmp.length() == 1) {
                tmp = "0" + tmp;
            }
            tmp = tmp.toUpperCase(Locale.ENGLISH);
            str += tmp;
            str += "<br />";
            bg.setToolTipText(str);
            _out.setText(str);
        } catch (Exception e) {
            bg.setBackground(Color.BLACK);
        }
    }

    public UI() {
        initComponents();
        paintIt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        ppp = new javax.swing.JPanel();
        r = new javax.swing.JSlider();
        b = new javax.swing.JSlider();
        g = new javax.swing.JSlider();
        logo = new javax.swing.JLabel();
        _out = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        r.setBackground(new java.awt.Color(255, 0, 0));
        r.setMajorTickSpacing(10);
        r.setMaximum(255);
        r.setMinorTickSpacing(5);
        r.setPaintLabels(true);
        r.setPaintTicks(true);
        r.setToolTipText("");
        r.setValue(90);
        r.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                rPropertyChange(evt);
            }
        });

        b.setBackground(new java.awt.Color(0, 0, 255));
        b.setMajorTickSpacing(10);
        b.setMaximum(255);
        b.setMinorTickSpacing(5);
        b.setPaintLabels(true);
        b.setPaintTicks(true);
        b.setSnapToTicks(true);
        b.setToolTipText("");
        b.setValue(90);
        b.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bPropertyChange(evt);
            }
        });

        g.setBackground(new java.awt.Color(0, 255, 0));
        g.setMajorTickSpacing(10);
        g.setMaximum(255);
        g.setMinorTickSpacing(5);
        g.setPaintLabels(true);
        g.setPaintTicks(true);
        g.setSnapToTicks(true);
        g.setToolTipText("");
        g.setValue(90);
        g.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout pppLayout = new javax.swing.GroupLayout(ppp);
        ppp.setLayout(pppLayout);
        pppLayout.setHorizontalGroup(
            pppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pppLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pppLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {b, g, r});

        pppLayout.setVerticalGroup(
            pppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pppLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(r, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pppLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {b, g, r});

        logo.setBackground(new java.awt.Color(255, 255, 255));
        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Capture.PNG"))); // NOI18N

        _out.setBackground(new java.awt.Color(255, 255, 255));
        _out.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _out.setText("  ");
        _out.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        _out.setDoubleBuffered(true);

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(logo))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ppp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(_out, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ppp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(_out, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gPropertyChange
        paintIt();
    }//GEN-LAST:event_gPropertyChange

    private void bPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bPropertyChange
        paintIt();
    }//GEN-LAST:event_bPropertyChange

    private void rPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_rPropertyChange
        paintIt();
    }//GEN-LAST:event_rPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */        //Nimbus
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _out;
    private javax.swing.JSlider b;
    private javax.swing.JPanel bg;
    private javax.swing.JSlider g;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel ppp;
    private javax.swing.JSlider r;
    // End of variables declaration//GEN-END:variables
}

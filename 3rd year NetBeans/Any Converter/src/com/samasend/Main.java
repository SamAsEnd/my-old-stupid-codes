/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.samasend;

import com.samasend.types.Converter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.*;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Sam As End
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private static HashMap<Object, ArrayList<Object>> map = new HashMap<>(14);
    private static ArrayList<Object> list;
    private static final long serialVersionUID = 1L;

    static {
        list = new ArrayList<>();
        list.add("Degree");
        list.add("Gradian");
        list.add("Radian");
        map.put("Angle", list);
        list = new ArrayList<>();
        list.add("Day");
        list.add("Hour");
        list.add("Microsecond");
        list.add("Millisecond");
        list.add("Minute");
        list.add("Month");
        list.add("Second");
        list.add("Week");
        list.add("Year");
        map.put("Time", list);
        list = new ArrayList<>();
        list.add("CubicCentimeter");
        list.add("CubicFeet");
        list.add("CubicInch");
        list.add("CubicMeter");
        list.add("CubicYard");
        list.add("FluidOunceUK");
        list.add("FluidOunceUS");
        list.add("GallonUK");
        list.add("GallonUS");
        list.add("Liter");
        list.add("PintUK");
        list.add("PintUS");
        list.add("QuartUK");
        list.add("QuartUS");
        map.put("Volume", list);
        list = new ArrayList<>();
        list.add("BTUminute");
        list.add("Foot-Poundminute");
        list.add("Horsepower");
        list.add("Kilowatt");
        list.add("Watt");
        map.put("Power", list);
        list = new ArrayList<>();
        list.add("BritishThermalUnit");
        list.add("Calorie");
        list.add("Electron-Volts");
        list.add("Foot-Pound");
        list.add("Joule");
        list.add("Kilocalorie");
        list.add("Kilojoule");
        map.put("Energy", list);
        list = new ArrayList<>();
        list.add("Angstrom");
        list.add("Centimeter");
        list.add("Chain");
        list.add("Fathom");
        list.add("Feet");
        list.add("Hand");
        list.add("Inch");
        list.add("Kilometer");
        list.add("Link");
        list.add("Meter");
        list.add("Micron");
        list.add("Mile");
        list.add("MilliMeter");
        list.add("NanoMeter");
        list.add("NauticalMiles");
        list.add("PICA");
        list.add("Rods");
        list.add("Span");
        list.add("Yard");
        map.put("Length", list);
        list = new ArrayList<>();
        list.add("Acres");
        list.add("Hectares");
        list.add("SquareCentimeter");
        list.add("SquareFeet");
        list.add("SquareInch");
        list.add("SquareKilometer");
        list.add("SquareMeter");
        list.add("SquareMile");
        list.add("SquareMillimeter");
        list.add("SquareYard");
        map.put("Area", list);
        list = new ArrayList<>();
        list.add("DegreesCelsius");
        list.add("DegreesFahrenheit");
        list.add("Kelvin");
        map.put("Temperature", list);
        list = new ArrayList<>();
        list.add("Centimeterpersecond");
        list.add("Feetpersecond");
        list.add("Kilometerpersecond");
        list.add("Knots");
        list.add("Machatstd.atm");
        list.add("Meterpersecond");
        list.add("Milepersecond");
        map.put("Velocity", list);
        list = new ArrayList<>();
        list.add("Atmosphere");
        list.add("Bar");
        list.add("KiloPascal");
        list.add("Millimeterofmercury");
        list.add("Pascal");
        list.add("PoundperSquareInchPSI");
        map.put("Pressure", list);
    }

    public Main() {
        initComponents();
        typeActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        top = new javax.swing.JPanel();
        img = new javax.swing.JLabel();
        bottom = new javax.swing.JPanel();
        from = new javax.swing.JComboBox();
        to = new javax.swing.JComboBox();
        in = new javax.swing.JTextField();
        toLabel = new javax.swing.JLabel();
        out = new javax.swing.JTextField();
        infoLabel = new javax.swing.JLabel();
        type = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();
        helpp = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        about = new javax.swing.JMenuItem();
        help = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sam As End Tempreture Converter");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(213, 213, 213));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        setForeground(java.awt.Color.white);
        setResizable(false);

        top.setBackground(new java.awt.Color(255, 255, 255));

        img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/samasend/img/samasend.png"))); // NOI18N

        javax.swing.GroupLayout topLayout = new javax.swing.GroupLayout(top);
        top.setLayout(topLayout);
        topLayout.setHorizontalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        topLayout.setVerticalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
        );

        bottom.setBackground(new java.awt.Color(255, 255, 255));

        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });

        to.setToolTipText("");
        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        in.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inKeyReleased(evt);
            }
        });

        toLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        toLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toLabel.setText("To");

        out.setEditable(false);

        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText("Welcome");

        type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        type.setModel(new DefaultComboBoxModel(map.keySet().toArray()));
        type.setAutoscrolls(true);
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomLayout = new javax.swing.GroupLayout(bottom);
        bottom.setLayout(bottomLayout);
        bottomLayout.setHorizontalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bottomLayout.createSequentialGroup()
                        .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(in)
                            .addComponent(from, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(toLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(to, 0, 181, Short.MAX_VALUE)
                            .addComponent(out))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomLayout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        bottomLayout.setVerticalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toLabel))
                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(in, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(out, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        file.setText("File");

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        jMenuBar1.add(file);

        helpp.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Visit site");
        jMenuItem1.setToolTipText("[www.samasend.com]");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        helpp.add(jMenuItem1);

        about.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        about.setText("About");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        helpp.add(about);

        help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        help.setText("Help");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        helpp.add(help);

        jMenuBar1.add(helpp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // from change
        play(1);
        update();
    }//GEN-LAST:event_fromActionPerformed

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        // to change
        play(1);
        update();
    }//GEN-LAST:event_toActionPerformed

    private void inKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inKeyReleased
        // new value
        update();
    }//GEN-LAST:event_inKeyReleased

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        play(-1);
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void inKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inKeyPressed
        int code = evt.getKeyChar();
        if (code == KeyEvent.VK_0) {
            play(10);
        } else if (code == KeyEvent.VK_1) {
            play(11);
        } else if (code == KeyEvent.VK_2) {
            play(12);
        } else if (code == KeyEvent.VK_3) {
            play(13);
        } else if (code == KeyEvent.VK_4) {
            play(14);
        } else if (code == KeyEvent.VK_5) {
            play(15);
        } else if (code == KeyEvent.VK_6) {
            play(16);
        } else if (code == KeyEvent.VK_7) {
            play(17);
        } else if (code == KeyEvent.VK_8) {
            play(18);
        } else if (code == KeyEvent.VK_9) {
            play(19);
        } else {
        }
    }//GEN-LAST:event_inKeyPressed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        //Dialog.setLocationRelativeTo(null);
        //text.setText("<html><center> <b>Version: </b>1.1<br>+audio<br> <b>GNU GENERAL PUBLIC LICENSE</b><br> Version 2, June 1991<br> <br> Copyright (C) 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. <br> Preamble </center>");
        //Dialog.setTitle("About");
        //Dialog.setVisible(true);
        play(2);
    }//GEN-LAST:event_aboutActionPerformed

    @SuppressWarnings("empty-statement")
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            //  Old Style
            //Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler http://www.samasend.com");
            Desktop.getDesktop().browse(new URI("http://www.samasend.com"));
        } catch (URISyntaxException | IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        //Dialog.setLocationRelativeTo(null);
        //Dialog.setTitle("Help");
        //text.setText("<html><center><b>sorry</b> i don't have a help doc for now!!</center>");
        //Dialog.setVisible(true);
        play(2);
    }//GEN-LAST:event_helpActionPerformed

    @SuppressWarnings("unchecked")
    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        int t = type.getSelectedIndex();
        ArrayList<Object> l = map.get(map.keySet().toArray()[t]);
        DefaultComboBoxModel<Object> comboBoxModel1 = new DefaultComboBoxModel<>(l.toArray());
        DefaultComboBoxModel<Object> comboBoxModel2 = new DefaultComboBoxModel<>(l.toArray());
        from.setModel(comboBoxModel1);
        to.setModel(comboBoxModel2);
        //System.out.println(map.keySet().toArray()[t]);
        //System.out.println(l);
        repaint();
        out.setText("");
        if(in.getText().length() > 0) {
            update();
        }
    }//GEN-LAST:event_typeActionPerformed

    void update() {
        try {
            infoLabel.setForeground(Color.green);
            infoLabel.setText("developed by Sam As End");
            out.setText("" + new Converter(Double.parseDouble(in.getText()),
                    (String) type.getSelectedItem(),
                    (String) from.getSelectedItem(),
                    (String) to.getSelectedItem()).getResult());
        } catch (Exception ex) {
            infoLabel.setForeground(Color.red);
            infoLabel.setText(ex.getMessage());
            play(0);
        }

    }

    void play(int index) {
        InputStream sound = null;
        AudioStream audio;
        File f;
        try {
            if (index == 0) {
                sound = Main.class.getResourceAsStream("audio/error.wav");
                //sound = new FileInputStream(new File("C:\\Users\\Sam As End\\Documents\\NetBeansProjects\\Tempreture Converter\\src\\audio\\error.wav"));
            } else if (index == 1) {
                sound = Main.class.getResourceAsStream("audio/drip.au");
            } else if (index == 2) {
                sound = Main.class.getResourceAsStream("audio/computer.au");
            } else if (index == 10) {
                sound = Main.class.getResourceAsStream("audio/0.au");
            } else if (index == 11) {
                sound = Main.class.getResourceAsStream("audio/1.au");
            } else if (index == 12) {
                sound = Main.class.getResourceAsStream("audio/2.au");
            } else if (index == 13) {
                sound = Main.class.getResourceAsStream("audio/3.au");
            } else if (index == 14) {
                sound = Main.class.getResourceAsStream("audio/4.au");
            } else if (index == 15) {
                sound = Main.class.getResourceAsStream("audio/5.au");
            } else if (index == 16) {
                sound = Main.class.getResourceAsStream("audio/6.au");
            } else if (index == 17) {
                sound = Main.class.getResourceAsStream("audio/7.au");
            } else if (index == 18) {
                sound = Main.class.getResourceAsStream("audio/8.au");
            } else if (index == 19) {
                sound = Main.class.getResourceAsStream("audio/9.au");
            } else if (index == -1) {
                sound = Main.class.getResourceAsStream("audio/exit.wav");
            } else {
                return;
            }
            audio = new AudioStream(sound);
            AudioPlayer.player.start(audio);
        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Main m = new Main();
                m.setVisible(true);
                m.setLocationRelativeTo(null);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JPanel bottom;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JComboBox from;
    private javax.swing.JMenuItem help;
    private javax.swing.JMenu helpp;
    private javax.swing.JLabel img;
    private javax.swing.JTextField in;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JTextField out;
    private javax.swing.JComboBox to;
    private javax.swing.JLabel toLabel;
    private javax.swing.JPanel top;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
}
